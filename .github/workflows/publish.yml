name: Publish
on:
  workflow_call:
    inputs:
      nightly:
        default: false
        required: true
        type: boolean
      version:
        required: true
        type: string
      target_commitish:
        required: true
        type: string

permissions:
  contents: write

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/download-artifact@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Prerelease preface
        if: inputs.nightly
        run: echo "**This is an automated prerelease build**" >> ./RELEASE_NOTES

      - name: Generate release notes
        run: |
          cat >> ./RELEASE_NOTES << EOF
          #### A description of the various files are in the [README](https://github.com/yt-dlp/yt-dlp#release-files)
          ---
          <details><summary><h3>Changelog</summary>
          $(python ./devscripts/make_changelog.py -vv)
          </details>
          EOF

      - name: Archive nightly release
        if: |
          inputs.nightly && env.GITHUB_TOKEN && vars.ARCHIVE_REPO
        env:
          GITHUB_TOKEN: ${{ secrets.ARCHIVE_REPO_TOKEN }}
        run: |
          gh release create --repo ${{ vars.ARCHIVE_REPO }} -F RELEASE_NOTES \
            --target ${{ inputs.target_commitish }} -t "Build ${{ inputs.version }}" \
            ${{ inputs.version }} artifact/*

      - name: Prune old nightly release
        if: inputs.nightly
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          gh release delete -y "nightly" || true
          git push --delete origin "nightly" || true
          git tag --delete "nightly" || true
          sleep 5  # Enough time to cover deletion race condition

      - name: Publish release${{ inputs.nightly && " (nightly)" }}
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          gh release create -F RELEASE_NOTES --target ${{ inputs.target_commitish }} \
            -t "yt-dlp ${{ inputs.nightly && 'nightly ' }}${{ inputs.version }}" \
            ${{ inputs.nightly && '-p "nightly"' || ${{ inputs.version }} }} artifact/*
